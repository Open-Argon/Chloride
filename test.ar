# SPDX-FileCopyrightText: 2025 William Bell

# SPDX-License-Identifier: GPL-3.0-or-later

"h"
"e"
"ll"
"o"
" "
"wo"
"rl"
"d"
"world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello world"
"hello\u0000world"
"ðŸ‡¬ðŸ‡§"
"\u0000"
"hello"

let hello = "helllo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbruhhhhh"

1.24323234e2312324

let a, 
    b = "hello", 
    c, 
    d = 42, 
    temp_result, 
    compute_area(radius) = 3.1415, 
    identity(x) = x, 
    f(x)=do
        term.log("hello world")
        do
            term.log('hello world')
        term.log("hello world")
    ,
    g(y, z), 
    result, 
    z = 0, 
    extremely_long_variable_name_to_test_limits, 
    cache_value = compute_area(5), 
    placeholder_fn_with_no_body(arg1, arg2, arg3), 
    total = identity(100), 
    deeply_nested_args_function(arg1, arg2, arg3, arg4, arg5), 
    sum = a, 
    another, 
    another_function(),
    just_null_here,
    x




if (x) do
    term.log("hello world")
    term.log("hello world")
else term.log("bruh")







mm=x/2/4/2/4354/534/534//534//3422*404203420234+3432423324&&430234230||4320423040230423^384239423043024923%4432042304920.3432423423

let X = [
    'hello world',
    'wow',
    10
]

term.log(x[0:1:1])

let y = {
    'hello':test,
    world:'nice'
}

term.log(y['hello'],y.world)